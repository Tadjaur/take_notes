name: take_notes
description: A simple cross platform note application
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=2.19.4 <3.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  # A package to help with creating custom windows with Flutter desktop
  # (custom border, titlebar and minimize/maximize/close buttons) and common desktop window
  # operations (show/hide/position on screen) for Windows and macOS.
  # Platform: Android, ios, macos, linux, web, windows.
  bitsdojo_window: 0.1.5

  # Implementations of SHA, MD5, and HMAC cryptographic functions.
  crypto: 3.0.3

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: 1.0.2

  # A bridge package between google_sign_in and googleapis_auth, to create Authenticated Clients from google_sign_in user credentials.
  extension_google_sign_in_as_googleapis_auth: 2.0.9
  
  firebase_auth: ^4.6.1
  firebase_core: ^2.13.0
  flutter:
    sdk: flutter

  # Manage states and inject dependencies easily with GetX.
  # Platform: Android, ios, macos, linux, web, windows.
  get: 4.6.5

  # Flutter plugin for Google Sign-In, a secure authentication system for signing in with a Google account on Android and iOS.
  google_sign_in: 6.1.0

  # Auto-generated client libraries for accessing Google APIs described through the API discovery service.
  googleapis: 11.1.0
  
  # Obtain Access credentials for Google services using OAuth 2.0
  googleapis_auth: 1.4.0
  
  # Lightweight and blazing fast key-value database written in pure Dart.
  # Strongly encrypted using AES-256.
  # Platform: Android, ios, macos, linux, web, windows.
  hive: 2.2.3

  # A composable, multi-platform, Future-based API for HTTP requests.
  http: 0.13.6
  
  # A string-based path manipulation library.
  # All of the path operations you know and love, with solid support for Windows,
  # POSIX (Linux and Mac OS X), and the web.
  path: 1.8.2
 
 # Flutter plugin for getting commonly used locations on host platform file systems,
  # such as the temp and app data directories.
  path_provider: 2.0.14

  # Flutter plugin for launching a URL. Supports web, phone, SMS, and email schemes.
  url_launcher: 6.1.11

  # RFC4122 (v1, v4, v5) UUID Generator and Parser for all Dart platforms (Web, VM, Flutter).
  uuid: 3.0.7

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
